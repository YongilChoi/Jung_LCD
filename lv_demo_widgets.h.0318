/**
 * @file lv_demo_widgets.h
 *
 */

#ifndef LV_DEMO_WIDGETS_H
#define LV_DEMO_WIDGETS_H
#if 0         
#ifdef __cplusplus
extern "C" {
#endif
#endif

/*********************
 *      INCLUDES
 *********************/
#include <lvgl.h>
#include <Arduino_GFX_Library.h>

#include "freertos/FreeRTOS.h"
#include "freertos/task.h"


//#include <Arduino.h>  // String 클래스 정의가 포함된 헤더

//extern Arduino_GFX *gfx;

/*********************
 *      DEFINES
 *********************/

/**********************
 *      TYPEDEFS
 **********************/



typedef enum {
    DISP_SMALL,
    DISP_MEDIUM,
    DISP_LARGE,
} disp_size_t;

extern QueueHandle_t soundQueue;
//extern SimpleAudio audio;

extern char * ssid;
extern char * password;
extern int signal_strength;

//extern int32_t volume_value;

extern lv_obj_t * hygera;
extern lv_obj_t * motor;
extern lv_obj_t * error;
extern lv_obj_t * feces;
extern lv_obj_t * connect;
extern lv_obj_t * diaper;
extern lv_obj_t * menuimg;
extern lv_obj_t * tank;
extern lv_obj_t * power;
extern lv_obj_t * wifi;
extern lv_obj_t * bat;

extern lv_obj_t * panel0;
extern lv_obj_t * motor;

extern lv_obj_t* water_level_label;

extern lv_obj_t *header_label;
extern lv_obj_t *header_label_back;

extern lv_style_t style_list;
extern lv_style_t style_header;
extern lv_style_t style_header_18;
extern lv_style_t style_header_18_2;

extern void initial_cb_2(void);

extern lv_obj_t* msg_top_img_check;
extern lv_obj_t* close_btn_img;
extern lv_obj_t* msg_label;
extern lv_obj_t* label_hema;
extern lv_obj_t* btn_hema;
extern lv_obj_t* alert_msgbox;

// Global variables
extern lv_obj_t * wifi_screen;
extern lv_obj_t * password_screen;
extern lv_obj_t * status_screen;
extern lv_obj_t *main_screen;

LV_IMG_DECLARE(img_bg);

LV_IMG_DECLARE(img_power_on);
LV_IMG_DECLARE(img_power_off);
LV_IMG_DECLARE(img_wifi_on);
LV_IMG_DECLARE(img_wifi_off);
LV_IMG_DECLARE(img_bat_on);
LV_IMG_DECLARE(img_bat_off);
LV_IMG_DECLARE(img_bat_low);


LV_IMG_DECLARE(img_hygera);

LV_IMG_DECLARE(img_motor_off);
LV_IMG_DECLARE(img_error_on);
LV_IMG_DECLARE(img_error_off);
LV_IMG_DECLARE(img_feces_on);
LV_IMG_DECLARE(img_feces_off);
LV_IMG_DECLARE(img_connect_on);
LV_IMG_DECLARE(img_connect_off);
LV_IMG_DECLARE(img_diaper_on);
LV_IMG_DECLARE(img_diaper_off);
LV_IMG_DECLARE(img_menu_off);

LV_IMG_DECLARE(img_msgbox_error);
LV_IMG_DECLARE(img_msgbox_check);
LV_IMG_DECLARE(img_close_btn);

LV_IMG_DECLARE(img_qr);
LV_IMG_DECLARE(img_speaker);
//void rtc_time(void);
/**********************
 * GLOBAL PROTOTYPES
 **********************/
void lv_demo_widgets(void);
void menu(void);
void blinkON(void);
void blinkOFF(void);
void Event_power_ON(void);
void Event_power_OFF(void);
void Event_wifi_ON(void);
void Event_wifi_OFF(void);
void Event_bat_ON(void);
void Event_bat_OFF(void);
void Event_motor_ON(void);
void Event_motor_OFF(void);
void Event_error_ON(void);
void Event_error_OFF(void);
void Event_feces_ON(void);
void Event_feces_OFF(void);
void Event_connect_ON(void);
void Event_connect_OFF(void);
void Event_diaper_ON(void);
void Event_diaper_OFF(void);
void Event_tank_ON(float water_level);
void mp4play(void);
void process_message(void* message);


void img_click_event_cb_icn01(lv_event_t * e);
void img_click_event_cb_menuimg(lv_event_t * e);
void img_click_event_cb_wifi(lv_event_t *e);
void wifi_connect_with_password(lv_event_t *e);
void connect_to_wifi(const char* ssid2, const char* password2);

void send_wifi_conn_info(char *ssid, const char *pw);
void send_factory_init();

void setup_keyboard_with_special_chars(lv_obj_t *kb);
void initial_cb_1(void);
//void readFile(fs::FS &fs, const char *path);

void setup_time_display(lv_obj_t * parent);

void urination_sound_handler(lv_event_t* e);
void breathing_sound_handler(lv_event_t* e);

/**********************
 *      MACROS
 **********************/
#if 0  
#ifdef __cplusplus
} /* extern "C" */
#endif
#endif
#endif /*LV_DEMO_WIDGETS_H*/
